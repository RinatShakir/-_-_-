class House:                                                                # Создаем класс House

    houses_history = []                                                     # В классе House создаем аттрибут houses_history, который будет хранить названия созданных объектов

    def __new__(cls, *args):                                                # Создаем функцию с методом new, чтобы возвращать ссылку на экземпляр класса
        object1 = super().__new__(cls)                                      # внутри функции определяем object1 с помощью метода 'super().__new__(cls)'.
        house_name = args[0]                                                # определяем название жилого комплекса с использованием args для передачи неопределенного числа неименованных аргументов. 0 определяет 1-й параметр.
        cls.houses_history.append(house_name)                               # обозначаем текущий класс объекта houses_history методом class и используем метод append для добавления наименование объекта в конец списка.
        return object1                                                      # возвращаем наименование объекта

    def __init__(self, name):                                               # Создаем функцию инициализации конструктора класса
        self.name = name                                                    # внутри функции определяем аттрибутами: self.name - имя ЖК

    def __del__(self):                                                      # создаем функцию для уничтожения экземпляра объекта внутри класса.
        print(f"Дом '{self.name}' снесён, но он останется в истории.")      # выводим на экран информацию, что такой-то объект снесен, но остается в списке.

                                                                            # записываем входные параметры задачи:
h1 = House('ЖК Эльбрус')
print(House.houses_history)
h2 = House('ЖК Акация')
print(House.houses_history)
h3 = House('ЖК Матрёшки')
print(House.houses_history)

del h2
del h3
print(House.houses_history)